#!/bin/bash

if [ $# -ne 1 ]; then
  echo "Usage $0 <path to env file>"
  exit 1
fi

source $1
export AWS_ACCESS_KEY_ID
export AWS_SECRET_ACCESS_KEY
export WALE_S3_PREFIX
export AWS_ENDPOINT
export AWS_S3_FORCE_PATH_STYLE
export AWS_REGION
export WALG_PGP_KEY_PATH
export WALG_GPG_KEY_ID
export WALG_PGP_KEY_PASSPHRASE

/usr/local/bin/wal-g backup-list

echo -n "Name of basebackup to restore: "
read BASEBACKUP_NAME
echo -n "Timestamp to restore or 'latest', ex: '2019-12-31 19:58:55': "
read TIMESTAMP
echo -n "Delete current data or backup it locally, you need space available (delete/backup): "
read DELETE_BACKUP

echo "Stopping current pg instance"
puppet agent --disable "Backup restoration"
systemctl stop <%= $service_name %>
cd <%= $datadir %>/..
if [ "$DELETE_BACKUP" = "delete" ]; then
  echo "Delete current data"
  rm -fr data
else
  echo "Backup current data in <%= $datadir %>.before-restore"
  mv data data.before-restore
fi

echo "Download basebackup $BASEBACKUP_NAME"
/usr/local/bin/wal-g backup-fetch data $BASEBACKUP_NAME
cd data

echo "Configure recovery"
touch recovery.signal
echo "restore_command = '/usr/local/bin/restore_command.sh /usr/local/bin/exporter.env %f %p'" >> postgresql.auto.conf
sed -i "s/listen_addresses = '\*'/listen_addresses = 'localhost'/" postgresql.conf

if [ "$TIMESTAMP" != "latest" ]; then
  echo "recovery_target_time = '$TIMESTAMP'" >> postgresql.auto.conf
fi
chown -R postgres:postgres .

echo "Starting postgres with only local connections"
systemctl start <%= $service_name %>

echo "Now you can inspect database state and log file:"
cat <%= $datadir %>/log/*

echo
echo
echo
echo -n "Restart postgres with connections from the network ? (yes/no): "
read RESTART

if [ "$RESTART" = 'yes' ]; then
  sed -i "s/listen_addresses = 'localhost'/listen_addresses = '*'/" postgresql.conf
  systemctl restart <%= $service_name %>
  puppet agent --enable
else
  echo $'\nPostgres is running with local connections only.'
  echo $'\nIn order to enable network connections, execute the following commands.'
  echo "As user=postgres:"
  echo sed -i \"s/listen_addresses = 'localhost'/listen_addresses = '*'/\" postgresql.conf
  echo $'\nAs user=root:'
  echo systemctl restart <%= $service_name %>
  echo puppet agent --enable
fi
